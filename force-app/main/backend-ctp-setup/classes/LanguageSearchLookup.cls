/**
 * Created by Igor Malyuta on 25.11.2019.
 */

public without sharing class LanguageSearchLookup {
    @AuraEnabled
    public static List<LookupSearchResult> searchLanguages(String searchTerm, String value) {
        try {
            List<LookupSearchResult> resList = new List<LookupSearchResult>();

            List<LabelValueItem> languages = IRBParticipantService.getLanguages();

            List<String> selectedLangs = new List<String>();
            if (!String.isEmpty(value))
                selectedLangs = value.split(';');
            for (LabelValueItem labelValueItem : languages) {
                if (
                    labelValueItem.label.containsIgnoreCase(searchTerm) &&
                    !selectedLangs.contains(labelValueItem.value)
                ) {
                    resList.add(
                        new LookupSearchResult(
                            labelValueItem.value,
                            null,
                            'standard:task2',
                            labelValueItem.label,
                            null
                        )
                    );
                }
            }

            return resList;
        } catch (Exception e) {
            return (List<LookupSearchResult>) AuraHelper.throwException(e);
        }
    }

    @AuraEnabled
    public static List<LookupSearchResult> searchLanguagesByValue(String value) {
        try {
            List<LabelValueItem> languages = IRBParticipantService.getLanguages();

            List<LookupSearchResult> resList = new List<LookupSearchResult>();
            if (String.isBlank(value))
                return resList;

            for (LabelValueItem labelValueItem : languages) {
                for (String item : value.split(';')) {
                    if (item.equals(labelValueItem.value)) {
                        resList.add(
                            new LookupSearchResult(
                                labelValueItem.value,
                                null,
                                'standard:task2',
                                labelValueItem.label,
                                null
                            )
                        );
                    }
                }
            }
            return resList;
        } catch (Exception e) {
            return (List<LookupSearchResult>) AuraHelper.throwException(e);
        }
    }
}
