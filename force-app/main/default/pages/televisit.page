<apex:page
    controller="OpenTokClientController"
    showHeader="false"
    sidebar="false"
    standardStylesheets="false"
    lightningStylesheets="true"
    applyBodyTag="False"
    applyHtmlTag="False"
    docType="html-5.0"
>
    <apex:stylesheet value="{!$Resource.proximanova}/proximanova.css" />
    <apex:stylesheet value="{!$Resource.Community_CSS_Core}" />
    <apex:includeScript value="{!$Resource.svg4everybody}" />
    <apex:includeScript value="{!$Resource.jquery224}" />
    <apex:includeScript value="{!$Resource.rr_community_js}" />
    <apex:includeScript value="{!$Resource.cometdTV1}" />
    <apex:includeScript value="{!$Resource.jqueryTV1}" />
    <apex:includeScript value="{!$Resource.jsonTV1}" />
    <apex:includeScript value="{!$Resource.jqueryCometdTV1}" />
    <link id="themeCSS" href="{!$Resource.Community_CSS_Stub}" rel="stylesheet" type="text/css" />
    <apex:form>
        <apex:actionPoller action="{!maintainSession}" interval="180" />
        <apex:actionFunction
            name="rerenderControllerValues"
            action="{!rerenderControllerValues}"
            rerender="controller-values"
        />
        <apex:actionFunction
            name="updateSharingUserName"
            action="{!updateSharingUserName}"
            rerender="screen-sharing-username-text"
        />
        <apex:actionFunction
            name="updateAttendees"
            action="{!updateAttendees}"
            rerender="participant-list,attendee-list"
        >
            <apex:param name="attendeesJson" assignTo="{!attendeesJson}" value="" />
        </apex:actionFunction>
        <apex:actionFunction
            name="validateAttendeeEmail"
            action="{!validateAttendeeEmail}"
            rerender="controller-values"
            oncomplete="completeValidateAttendeeEmail();"
        >
            <apex:param name="attendeeEmailAddress" assignTo="{!attendeeEmailAddress}" value="" />
        </apex:actionFunction>
        <apex:actionFunction
            name="extendedMeetingInterval"
            action="{!extendedMeetingInterval}"
            rerender="jspanel,televisitBanner,controller-values"
        >
            <apex:param name="meetingInterval" assignTo="{!meetingInterval}" value="" />
        </apex:actionFunction>
        <apex:actionFunction
            name="fetchUpdatedTelevisitDetails"
            action="{!fetchUpdatedTelevisitDetails}"
            rerender="jspanel,televisitBanner,controller-values"
        />

        <apex:outputPanel id="jspanel">
            <script>
                jsBannerEndTime = '{!bannerEndTime}';
                jsAutoDisconnectMeetingTime = '{!autoDisconnectMeetingTime}';
                enableExtendCallDropDown = false;
                if (document.getElementById('televisitBanner') != null)
                    document.getElementById('televisitBanner').setAttribute('class', 'hideBanner');
                if (document.getElementById('extendcallminutes') != null) {
                    var option = document.createElement('option');
                    option.text = 'Extend Call';
                    option.value = '';
                    option.selected = 'true';
                    option.hidden = 'true';
                    option.disabled = 'true';
                    var select = document.getElementById('extendcallminutes');
                    select.appendChild(option);
                }

                var bc = new BroadcastChannel('{!sessionId}');
                bc.postMessage(jsBannerEndTime + '::' + jsAutoDisconnectMeetingTime);
                bc.onmessage = function (ev) {
                    jsBannerEndTime = ev.data.split('::')[0];
                    jsAutoDisconnectMeetingTime = ev.data.split('::')[1];
                    enableExtendCallDropDown = false;
                };

                var url =
                    window.location.protocol + '//' + window.location.hostname + '/cometd/40.0/';
                $.cometd.init({
                    url: url,
                    requestHeaders: { Authorization: 'OAuth {!$Api.Session_ID}' },
                    appendMessageTypeToURL: false
                });

                $.cometd.subscribe('/event/Televisit_Event__e', function (message) {
                    fetchUpdatedTelevisitDetails();
                });
            </script>
        </apex:outputPanel>

        <apex:outputPanel id="controller-values">
            <apex:inputHidden id="token" value="{!token}" />
            <apex:inputHidden id="apiKey" value="{!apiKey}" />
            <apex:inputHidden id="sessionId" value="{!sessionId}" />
            <apex:inputHidden id="isExternalUser" value="{!isExternalUser}" />
            <apex:inputHidden id="userName" value="{!userName}" />
            <apex:inputHidden id="sharingUserName" value="{!sharingUserName}" />
            <apex:inputHidden id="isAttendeeEmailValid" value="{!isAttendeeEmailValid}" />
        </apex:outputPanel>
        <script>
            var preventDuplicate = '{!sessionId}' + '{!$User.Id}';
            var communityUser = '{!attendeeType}';
            var channel = new BroadcastChannel(preventDuplicate);
            channel.postMessage(preventDuplicate);
            channel.addEventListener('message', (msg) => {
                if (msg.data === preventDuplicate) {
                    if (
                        !document
                            .getElementById('call-preview-screen-container')
                            .classList.contains('slds-hide')
                    ) {
                        toggle('#call-preview-screen-container', 'slds-hide');
                        disconnectFromSession();
                        toggle('#duplicate-meet-screen-container', 'slds-hide');
                    } else if (!document.getElementById('main').classList.contains('slds-hide')) {
                        toggle('#main', 'slds-hide');
                        disconnectFromSession();
                        toggle('#duplicate-meet-screen-container', 'slds-hide');
                    } else {
                        disconnectFromSession();
                    }
                }
            });
        </script>
    </apex:form>

    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <apex:slds />
        <apex:includeScript value="{!$Resource.opentokmin}" />
        <script type="text/javascript">

            var token;
            var apiKey;
            var sessionId;
            var session;
            var userName;

            var sfSessionId;

            var speakerId;
            var sharingId;
            var selfId;
            var lastActiveId;
            var hiddenId;
            var selfContainerId;

            var countFlag;
            var subsCounts;
            var publisherScreen;
            var publisher;

            var audioSelector;
            var videoSelector;
            var audioSource;
            var videoSource;
            var audioSourceChanged;
            var videoSourceChanged;
            var publishAudio;
            var publishVideo;
            var sessionJoined;
            var deviceSettingsOpen;
            var isPublishingScreenShare;
            var isSubscribedScreenShare;
            var isScreenShareLocked;
            var isExternalUser;

            var previewPublisher;

            var streamMap = new Map();
            var activeSpeakerArray;

            var options = {
                width: '100%',
                height: '100%',
                insertMode: 'append',
                showControls: false
            };

            const MAX_VISIBLE_SUBS = 5;
            const VIDEO_TYPE_SCREEN = 'screen';
            const SCREENSHARE_LOCK_EVT = 'screenshare-lock';
            const STREAM_CREATED_EVT = 'streamCreated';
            const STREAM_DESTROYED_EVT = 'streamDestroyed';
            const SIGNAL_EVT_PREFIX = 'signal:';

            window.$Label = window.$Label || {};
            $Label.StartCall = '{!JSENCODE($Label.StartCall)}';
            $Label.StopCall = '{!JSENCODE($Label.StopCall)}';
            $Label.Error_ScreenShareNotSupported = '{!JSENCODE($Label.Error_ScreenShareNotSupported)}';
            $Label.Error_ScreenSharePublish = '{!JSENCODE($Label.Error_ScreenSharePublish)}';
            $Label.Error_RetrieveAudioVideoSources = '{!JSENCODE($Label.Error_RetrieveAudioVideoSources)}';
            $Label.Error_UpdateAudioSource = '{!JSENCODE($Label.Error_UpdateAudioSource)}';
            $Label.Error_Publish = '{!JSENCODE($Label.Error_Publish)}';
            $Label.Session_Unavailable_Header = '{!JSENCODE($Label.Session_Unavailable_Header)}';
            $Label.Session_Sub_Unavailable_Header = '{!JSENCODE($Label.Session_Unavailable_Sub_Header)}';
            $Label.First_Name_Validation_Error = '{!JSENCODE($Label.First_Name_Validation_Error)}';
            $Label.Last_Name_Validation_Error = '{!JSENCODE($Label.Last_Name_Validation_Error)}';
            $Label.Email_Validation_Error = '{!JSENCODE($Label.Email_Validation_Error)}';
            $Label.Email_Validation_Failure_Error = '{!JSENCODE($Label.Email_Validation_Failure_Error)}';
            $Label.First_Name = '{!JSENCODE($Label.First_Name)}';
            $Label.Last_Name = '{!JSENCODE($Label.Last_Name)}';
            $Label.Email = '{!JSENCODE($Label.Email)}';
            $Label.Certify_Identity = '{!JSENCODE($Label.Certify_Identity)}';
            $Label.Certify_Identity_Error = '{!JSENCODE($Label.Certify_Identity_Error)}';


            /*-------------------------------------*/
            /*        Session Management
            /*-------------------------------------*/


            function getSessionId() {
                return '{!JSENCODE($CurrentPage.parameters.sessionId)}';
            }

            function manageCall() {

                var currentTime = getCurrentTime();;

                var communityUser = '{!attendeeType}';
                var firstAttendeeMsg = document.getElementById("firstAttendeeMsg");
                if (session.currentState === "disconnected" && communityUser == 'RH') {
                    if(firstAttendeeMsg != null && firstAttendeeMsg != undefined){
                        firstAttendeeMsg.style.display = "none";
                        connectToSession();
                    }
                } else if (session.currentState === "disconnected" && communityUser == 'PP') {
                    if(firstAttendeeMsg != null && firstAttendeeMsg != undefined){
                        firstAttendeeMsg.style.display = "none";
                        connectToSession();
                    }
                } else if (session.currentState === "connected" && jsAutoDisconnectMeetingTime > currentTime) {
                    toggle('#main', 'slds-hide');
                    toggle('#call-end-screen-container', 'slds-hide');
                }else if (jsAutoDisconnectMeetingTime < currentTime) {
                    toggle('#main', 'slds-hide');
                    toggle('#tv-end-screen-container', 'slds-hide');
                    disconnectFromSession();
                } else {
                    disconnectFromSession();
                }
            }

            function connectToSession() {

                deviceSettingsOpen = false;


                resizeSpeakerTile();

                session.connect(getControllerValue('token'), function (error) {

                    publisher = OT.initPublisher(getContainer(), getPublisherProperties(false));
                    session.publish(publisher, () => {
                        sessionJoined = true;

                        toggle('#settings-button-in-call', 'slds-hide')

                        addParticipant(publisher);

                        timer.start();
                    });

                });
            }

            function disconnectFromSession() {
                if (publisher) {
                    publisher.destroy();
                }

                if (publisherScreen) {
                    publisherScreen.destroy();
                }

                if (deviceSettingsOpen) {
                    toggleDeviceSettingsVisible();
                }
                session.disconnect();
            }

            function republish() {
                audioSelector.disabled = true;
                videoSelector.disabled = true;

                session.unpublish(publisher);
                document.getElementById(getBlokId(publisher.stream)).remove();

                publisher = OT.initPublisher(getContainer(), getPublisherProperties(false), (error) => {
                    audioSelector.disabled = false;
                    videoSelector.disabled = false;

                    if (error) {
                        alert($Label.Error_Publish + error.message);
                    }
                });

                session.publish(publisher);
            }

            function handleSubscriberStreamCreated(event) {
                var attendeeId = event.stream.connection.data;
                var attendeeName = attendeeId;

                Visualforce.remoting.Manager.invokeAction(
                    '{!$RemoteAction.OpenTokClientController.getAttendeeName}',
                    attendeeId,
                    function (result, remoteEvent) {
                        if (remoteEvent.status) {
                            attendeeName = result;
                        }

                        var options = getPublisherProperties(false);
                        options.name = attendeeName;

                        var subscriber = session.subscribe(event.stream, getContainer(event.stream), options);

                        if (event.stream.videoType === VIDEO_TYPE_SCREEN) {
                            toggleShareSubscriber(event.stream);
                        } else {
                            addParticipant(subscriber);
                        }

                        initializeSpeakerDetection(
                            subscriber,
                            handleStartTalking,
                            handleStopTalking
                        );
                    },
                    { escape: true }
                );
            }

            function handleSubscriberStreamDestroyed(event) {

                if(document.getElementById(getBlokId(event.stream))){
                    document.getElementById(getBlokId(event.stream)).remove();
                }

                if (event.stream.videoType === VIDEO_TYPE_SCREEN) {
                    toggleShareSubscriber();

                } else {
                    removeParticipant(event);
                }
            }

            /*-------------------------------------*/
            /*          Event Handlers
            /*-------------------------------------*/

            function confirmJoin() {
                if (isExternalUser) {
                    validateExternalUserForm();
                } else {
                    toggle('#call-preview-screen-container', 'slds-hide');
                    toggle('#main', 'slds-hide');
                    manageCall();
                }
            }

            function confirmReJoin() {
                toggle('#call-end-screen-container', 'slds-hide');
                toggle('#main', 'slds-hide');
            }

            function validateExternalUserForm() {
                // hideFormError('#first-name', '#first-name-error', null);
                // hideFormError('#last-name', '#last-name-error', null);
                hideFormError('#email', '#email-error');
                hideFormError('#certify', '#certify-error');

                let isValidated = true;
                // let firstName   = document.querySelector('#first-name-input').value;
                // let lastName    = document.querySelector('#last-name-input').value;
                let email = document.querySelector('#email-input').value;
                let certify = document.querySelector('#certify-input').checked;


                // if(!firstName) {
                //     showFormError('#first-name', '#first-name-error', null);
                //     isValidated = false;
                // }

                // if(!lastName) {
                //     showFormError('#last-name', '#last-name-error', null);
                //     isValidated = false;
                // }

                if (!certify) {
                    showFormError('#certify', '#certify-error', null);
                    return;
                }

                if (!email) {
                    showFormError('#email', '#email-error', $Label.Email_Validation_Error);
                    return;
                }

                validateAttendeeEmail(email);
            }

            function completeValidateAttendeeEmail() {
                let isAttendeeEmailValid = getControllerValue('isAttendeeEmailValid');
                if (isAttendeeEmailValid === "true") {
                    manageCall();
                } else {
                    showFormError('#email', '#email-error', $Label.Email_Validation_Failure_Error);
                }
            }

            function showFormError(inputTarget, errorTarget, errorMsg) {
                addClass(inputTarget, 'slds-has-error');
                removeClass(errorTarget, 'slds-hide');

                if (errorMsg) {
                    document.querySelector(errorTarget).textContent = errorMsg;
                }
            }

            function hideFormError(inputTarget, errorTarget) {
                removeClass(inputTarget, 'slds-has-error');
                addClass(errorTarget, 'slds-hide');
            }

            function confirmCancel() {
                disconnectFromSession();
                window.close();
            }

            function confirmCancelRejoin() {
                disconnectFromSession();
                window.close();
            }

            function toggleDeviceSettingsVisible() {
                let settingsContainerId = sessionJoined ? '#in-call-device-settings-container' : '#device-settings-container'
                let settingsClass = sessionJoined ? 'in-meeting-device-settings' : 'welcome-device-settings';
                let settingsIconId = sessionJoined ? 'in-meeting-settings-svg' : 'welcome-settings-svg';
                let settingsButton = document.getElementById(settingsIconId);

                initDeviceSettings().then(() => {
                    settingsButton.style.fill = deviceSettingsOpen ? "#706e6b" : "#0070d2";

                    toggle(settingsContainerId, 'slds-hide');
                    toggle(settingsContainerId, settingsClass);

                    deviceSettingsOpen = !deviceSettingsOpen;

                }).catch((error) => { });
            }

            function applyDeviceSettings() {
                toggleDeviceSettingsVisible();
                saveAudioVideoSource()

                if (videoSourceChanged) {
                    republish();
                } else if (audioSourceChanged) {
                    updateAudioSource(audioSource);
                }
            }

            function toggleVideo() {
                publishVideo = !publishVideo;

                toggle('.icon-videoOn', 'slds-hide');
                toggle('.icon-videoOff', 'slds-hide');

                toggle('.button--video', 'button_white');
                toggle('.button--video', 'button_blue');
                toggle('.button--video', 'active');

                toggleTitle('.button--video', !publishVideo);
                removeClass('.button--video', 'button-hover-state');

                if (sessionJoined) {
                    publisher.publishVideo(publishVideo);
                }
            }

            function toggleAudio() {
                publishAudio = !publishAudio;

                toggle('.icon-audioOn', 'slds-hide');
                toggle('.icon-audioOff', 'slds-hide');

                toggle('.button--audio', 'button_white');
                toggle('.button--audio', 'button_blue');
                toggle('.button--audio', 'active');

                toggleTitle('.button--audio', !publishAudio);
                removeClass('.button--audio', 'button-hover-state');

                if (sessionJoined) {
                    publisher.publishAudio(publishAudio);
                }
            }

            function toggleSharing() {
                toggle('.button--sharing', 'active');
                removeClass('.button--sharing', 'button-hover-state');

                if (!isPublishingScreenShare) {
                    startShareScreen();
                } else {
                    stopScreenShare();
                }
            }


            /*-------------------------------------*/
            /*          Utility Functions
            /*-------------------------------------*/

            function getPublisherProperties(isPublishingScreenShare) {
                return {
                    ...options,
                    name: getControllerValue('userName'),
                    publishAudio: publishAudio,
                    publishVideo: isPublishingScreenShare ? true : publishVideo,
                    audioSource: audioSource,
                    videoSource: isPublishingScreenShare ? VIDEO_TYPE_SCREEN : videoSource
                };
            }

            function getContainer(stream) {
                let target;
                let parentEle;

                if (stream && stream.videoType === VIDEO_TYPE_SCREEN) {
                    parentEle = sharingId;
                } else {
                    if (subsCounts <= MAX_VISIBLE_SUBS) {
                        let selfFeed = document.getElementById(selfContainerId)!=null ? document.getElementById(selfContainerId).firstChild : '';
                        let speakerFeed = document.getElementById(speakerId) ? document.getElementById(speakerId).firstChild : '';
                        let previousSpeakerFeed = document.getElementById(lastActiveId) ? document.getElementById(lastActiveId).firstChild : '';

                        if (!selfFeed) {
                            parentEle = selfContainerId;

                        } else if (!speakerFeed) {
                            parentEle = speakerId;

                        } else if (!previousSpeakerFeed) {
                            parentEle = lastActiveId;

                        } else {
                            parentEle = hiddenId;
                        }
                    } else {
                        parentEle = hiddenId;
                    }
                }

                feed = document.createElement('span');
                feed.id = getBlokId(stream);
                if(document.getElementById(parentEle)){
                    document.getElementById(parentEle).appendChild(feed);
                }
                return feed;
            }

            function getBlokId(stream) {
                var blokId = selfId;

                if (stream) {
                    if (stream.videoType === VIDEO_TYPE_SCREEN) {
                        blokId = sharingId + '-' + stream.streamId;
                    } else {
                        blokId = speakerId + '-' + stream.streamId;
                    }
                }

                return blokId;
            }


            /*-------------------------------------*/
            /*  Utility Functions : Device Settings
            /*-------------------------------------*/

            function initDeviceSettings() {
                return new Promise(function (resolve, reject) {

                    if (!deviceSettingsOpen) {

                        audioSourceChanged = false;
                        videoSourceChanged = false;

                        audioSelectId = sessionJoined ? '#in-call-audio-source-select' : '#audio-source-select';
                        videoSelectId = sessionJoined ? '#in-call-video-source-select' : '#video-source-select';

                        audioSelector = document.querySelector(audioSelectId);
                        videoSelector = document.querySelector(videoSelectId);

                        setupSelectorListeners();
                        populateDeviceSources(audioSelector, 'audioInput', audioSource);
                        populateDeviceSources(videoSelector, 'videoInput', videoSource);

                        resolve();

                    } else {
                        resolve();
                    }
                });
            }

            function populateDeviceSources(selector, kind, selectedValue) {
                OT.getDevices((error, devices) => {
                    if (error) {
                        alert($Label.Error_RetrieveAudioVideoSources + error.message);
                        reject();
                        return;
                    }

                    let index = 0;
                    selector.innerHTML = devices.reduce((innerHTML, device) => {
                        if (device.kind === kind) {
                            index += 1;
                            return `${innerHTML}<option value="${device.deviceId}">${device.label || device.kind + index}</option>`;
                        }
                        return innerHTML;
                    }, '');

                    setSelectedIndex(selector, selectedValue);
                });
            }

            function updateAudioSource(deviceId) {
                if (publisher) {
                    audioSelector.disabled = true;

                    publisher.setAudioSource(deviceId).then(() => {
                        audioSelector.disabled = false;
                    }).catch((error) => {
                        alert($Label.Error_UpdateAudioSource + error.message);
                        audioSelector.disabled = false;
                    });
                }
            }

            function setupSelectorListeners() {
                audioSelector.addEventListener('change', () => {
                    audioSourceChanged = true;
                });

                videoSelector.addEventListener('change', (event) => {
                    videoSourceChanged = true;
                });
            }

            function saveAudioVideoSource() {
                audioSource = audioSelector.value;
                videoSource = videoSelector.value;
            }

            function setSelectedIndex(s, val) {
                for (i = 0; i < s.options.length; i++) {

                    if (s.options[i].value == val) {
                        s.options[i].selected = true;
                        break;
                    }
                }
                return;
            }

            function handleStartTalking(event) {
                activeSpeakerArray.add(event.target.streamId, event.target.stream);
                updateActiveSpeakers();
            }

            function handleStopTalking(event) { }


            /*-------------------------------------*/
            /*   Utility Functions : Screen Sharing
            /*-------------------------------------*/

            function startShareScreen() {

                sendLockScreenShareEvent(true);

                OT.checkScreenSharingCapability(function (response) {

                    if (!response.supported || response.extensionRegistered === false || response.extensionInstalled === false) {
                        alert($Label.Error_ScreenShareNotSupported);
                    } else {

                        var screenShareOptions = getPublisherProperties(true);
                        publisherScreen = OT.initPublisher(sharingId, screenShareOptions, (error) => {
                            if (error) {
                                sendLockScreenShareEvent(false);
                            } else {
                                session.publish(publisherScreen, (error) => {
                                    if (error) {
                                        sendLockScreenShareEvent(false);
                                        alert($Label.Error_ScreenSharePublish + error.message);
                                    }
                                });
                            }
                        });

                        // screen share publisher event handlers
                        publisherScreen.on(STREAM_CREATED_EVT, (event) => {
                            toggleSharingPublisher();
                        });

                        publisherScreen.on(STREAM_DESTROYED_EVT, (event) => {
                            toggleSharingPublisher();
                        });

                    }
                });
            }

            function stopScreenShare() {
                session.unpublish(publisherScreen);
            }

            function toggleShareSubscriber(stream) {
                isSubscribedScreenShare = !isSubscribedScreenShare;

                toggle('.participants-container', 'slds-hide');
                toggle('.share-container', 'slds-hide');
                toggle('.speaker-container', 'slds-hide');
                toggle('.last-active-feed', 'slds-hide');
                toggle('.self-feed-container', 'slds-hide');
                toggle('.video-container', 'slds-medium-size_3-of-4');
                toggle('.controls', 'slds-size_1-of-1');

                toggle('.ctrls-feeds-action-bar', 'speaker-view');
                toggle('.ctrls-feeds-action-bar', 'share-view');

                if (isSubscribedScreenShare) {
                    addClass('.button--sharing', 'slds-hide');
                } else {
                    removeClass('.button--sharing', 'slds-hide');
                }

                if (stream) {
                    document.querySelector("input[id$='sharingUserName']").value = stream.name;
                    updateSharingUserName();
                }

                resizeSpeakerTile();
            }

            function sendLockScreenShareEvent(isLocked) {
                session.signal({
                    type: SCREENSHARE_LOCK_EVT,
                    data: isLocked
                }, (error) => {
                    if (error) {
                        console.log('Error sending signal:', error.name, error.message);
                    }
                }
                );
            }

            function handleLockScreenShare(event) {
                if (event.from.connectionId != session.connection.connectionId) {
                    isScreenShareLocked = event.data;

                    if (isScreenShareLocked) {
                        addClass('.button--sharing', 'slds-hide');
                    } else {
                        removeClass('.button--sharing', 'slds-hide');
                    }
                }
            }

            /*-------------------------------------*/
            /*   Utility Functions : UI Updates
            /*-------------------------------------*/

            function showparticipantListMobile() {
                document.getElementById("in-call-device-people-container").style.width = "250px";
                var element = document.getElementById("main");
                element.classList.toggle("main-container-open");
            }

            function closeparticipatList() {
                document.getElementById("in-call-device-people-container").style.width = "0";
                var element = document.getElementById("main");
                element.classList.toggle("main-container-open");
            }

            function updateParticipantList() {
                let attendees = [];

                streamMap.forEach((element) => {
                    attendees.push({
                        id: element.connection.data,
                        streamId: element.streamId,
                        connectionId: element.connection.id
                    });
                });

                let attendeesJson = JSON.stringify(attendees);

                if (attendees.length === 1 && countFlag !== true) {
                    countFlag = true;
                    document.getElementById("firstAttendeeMsg").style.display = "block";
                }
                else {
                    document.getElementById("firstAttendeeMsg").style.display = "none";
                }

                updateAttendees(attendeesJson);

            }

            function addParticipant(participant) {
                var stream = participant.stream;
                var streamId = participant.stream.id;

                subsCounts++;
                streamMap.set(streamId, stream);
                updateParticipantList();

                if (streamId != publisher.streamId) {

                    if (activeSpeakerArray.isEmpty()) {
                        activeSpeakerArray.add(streamId, stream);

                    } else if (!activeSpeakerArray.get(1)) {
                        activeSpeakerArray.addToEnd(streamId, stream);
                    }
                }
            }

            function removeParticipant(participant) {
                var streamId = participant.stream.id;
                var stream = participant.stream;

                subsCounts--;

                streamMap.delete(streamId, stream);

                updateParticipantList();

                if (streamId != publisher.streamId) {
                    activeSpeakerArray.remove(streamId);
                }

                let replacementFeed = document.getElementById(hiddenId).firstChild;

                if (replacementFeed) {

                    let newStreamId = replacementFeed.id.replace(speakerId + "-", "");

                    if (activeSpeakerArray.isEmpty()) {
                        activeSpeakerArray.add(newStreamId, streamMap.get(newStreamId));

                    } else if (!activeSpeakerArray.get(1)) {
                        activeSpeakerArray.addToEnd(newStreamId, streamMap.get(newStreamId));
                    }
                }
                updateActiveSpeakers();
            }

            function updateActiveSpeakers() {
                moveStream(activeSpeakerArray.get(0), speakerId);
                moveStream(activeSpeakerArray.get(1), lastActiveId);
            }

            function moveStream(stream, targetClass) {

                let hiddenFeedsElement = document.getElementById(hiddenId);

                if (stream) {
                    let newElement = document.getElementById(getBlokId(stream));
                    let oldElementContainer = document.getElementById(targetClass);
                    let oldElement = oldElementContainer.firstChild;

                    if (oldElement && newElement) {

                        if (oldElement) {
                            hiddenFeedsElement.appendChild(oldElement);
                        }

                        if (newElement) {
                            oldElementContainer.appendChild(newElement);
                        }

                    } else if(newElement){
                        oldElementContainer.appendChild(newElement);
                    }
                }
            }

            /*-------------------------------------*/
            /*   Utility Functions : Misc
            /*-------------------------------------*/


            function toggle(elementId, className) {
                document.querySelector(elementId).classList.toggle(className);
            }

            function addClass(elementId, className) {
                document.querySelector(elementId).classList.add(className);
            }

            function removeClass(elementId, className) {
                document.querySelector(elementId).classList.remove(className);
            }

            function toggleTitle(elementId, status) {
                let item = document.querySelector(elementId);
                let attr = status ? 'on' : 'off';
                item.setAttribute('title', item.dataset[attr]);
            }

            function toggleSharingPublisher() {
                isPublishingScreenShare = !isPublishingScreenShare;

                toggle('.icon-startShare', 'slds-hide');
                toggle('.icon-stopShare', 'slds-hide');

                toggle('.button--sharing', 'button_white');
                toggle('.button--sharing', 'button_blue');

                toggleTitle('.button--sharing', !isPublishingScreenShare);
            }

            function resizeSpeakerTile() {
                let inCallHeaderHeight = document.getElementsByClassName('in-call-header')[0].clientHeight;
                let actionBarHeight = document.getElementsByClassName('ctrls-feeds-action-bar')[0].clientHeight;
                let headerHeight = document.getElementsByClassName('page-header')[0].clientHeight;

                let activeSpeakerTileHeight = (window.innerHeight) - inCallHeaderHeight - actionBarHeight - headerHeight - 76;

                document.getElementsByClassName('speaker-feed')[0].style.height = activeSpeakerTileHeight + 'px';
                document.getElementsByClassName('screen-sharing-feed')[0].style.height = activeSpeakerTileHeight + 'px';
            }
            var initializeSpeakerDetection = (subscriber, startTalking, stopTalking) => {

                var activity = null;

                subscriber.on('audioLevelUpdated', (event) => {

                    var now = Date.now();

                    if (event.audioLevel > 0.2) {

                        if (!activity) {
                            activity = {
                                timestamp: now,
                                talking: false
                            };

                        } else if (activity.talking) {
                            activity.timestamp = now;

                        } else if (now - activity.timestamp > 500) {
                            // detected audio activity for more than 1s
                            // for the first time.
                            activity.talking = true;
                            if (typeof (startTalking) === 'function') {
                                startTalking(event);
                            }
                        }

                    } else if (activity && now - activity.timestamp > 1500) {
                        // detected low audio activity for more than MAX_VISIBLE_SUBSs
                        if (activity.talking) {
                            if (typeof (stopTalking) === 'function') {
                                stopTalking(event);
                            }
                        }
                        activity = null;
                    }
                });
            };

            var enableExtendCallDropDown = false;
            var jsBannerEndTime;
            var jsAutoDisconnectMeetingTime;
            var callDisconnected = false;

            var timer = {
                timeElement: null,
                timerObj: null,
                timerNow: 0,

                init: function () {
                    timer.timeElement = document.getElementById("time");
                },

                tick: function () {
                    timer.timerNow++;

                    var remain = timer.timerNow;
                    var hours = Math.floor(remain / 3600);
                    remain -= hours * 3600;

                    var mins = Math.floor(remain / 60);
                    remain -= mins * 60;

                    var secs = remain;

                    if (hours < 10) { hours = "0" + hours; }
                    if (mins < 10) { mins = "0" + mins; }
                    if (secs < 10) { secs = "0" + secs; }

                    if (hours > 0)
                        timer.timeElement.innerHTML = hours + ":" + mins + ":" + secs;
                    else
                        timer.timeElement.innerHTML = mins + ":" + secs;


                    const date = new Date();
                    var currentHours = date.getUTCHours();
                    var currentMinutes = date.getUTCMinutes();
                    var currentSeconds = date.getUTCSeconds();
                    if (currentHours < 10) { currentHours = "0" + currentHours; }
                    if (currentMinutes < 10) { currentMinutes = "0" + currentMinutes; }
                    if (currentSeconds < 10) { currentSeconds = "0" + currentSeconds; }
                    var currentTime = currentHours + ':' + currentMinutes + ':' + currentSeconds;
                    //console.log(currentTime);

                    //console.log('{!bannerEndTime}');
                    //console.log(jsBannerEndTime);
                    //console.log('autoDisconnectMeetingTime:',jsAutoDisconnectMeetingTime);

                    //&& currentTime < jsAutoDisconnectMeetingTime
                    if (currentTime > jsBannerEndTime) {
                        //Need to remove this if condition because banner is not display in multiple screens - Its resolved
                        if (!enableExtendCallDropDown && document.getElementById("televisitBanner")!=null) {
                            enableExtendCallDropDown = true;
                            document.getElementById("televisitBanner").removeAttribute("class", "hideBanner");
                            document.getElementById("televisitBanner").setAttribute("class", "televisitBanner");
                            document.getElementById("extendcallminutes").setAttribute("class", "extendCallListUpdatedClass");
                            document.getElementById("closeButton").setAttribute("class", "extendCallListUpdatedClass");
                            //document.getElementById("televisitBanner").innerHTML += currentTime +':'+ jsBannerEndTime;
                        }
                    } else if(document.getElementById("televisitBanner")!=null){
                        document.getElementById("televisitBanner").setAttribute("class", "hideBanner");
                    }

                    if (currentTime > jsAutoDisconnectMeetingTime) {
                        if (!callDisconnected) {
                            manageCall();
                            callDisconnected = true;
                        }

                    }

                },

                start: function () {
                    timer.timerObj = setInterval(timer.tick, 1000);
                },
            };

            function closeBannerPopup() {
                document.getElementById("televisitBanner").setAttribute("class", "hideBanner");
            }

            function callExtendedMinutes() {

                var x = document.getElementById("extendcallminutes").value;
                extendedMeetingInterval(x);
            }


            function getControllerValue(name, shouldRerender) {
                if (shouldRerender) {
                    rerenderControllerValues();
                }

                let element = document.querySelector('input[id$="' + name + '"]');
                return element ? element.value : null;
            }

            function getCurrentTime(){
                const date = new Date();
                var currentHours = date.getUTCHours();
                var currentMinutes = date.getUTCMinutes();
                var currentSeconds = date.getUTCSeconds();
                if (currentHours < 10) { currentHours = "0" + currentHours; }
                if (currentMinutes < 10) { currentMinutes = "0" + currentMinutes; }
                if (currentSeconds < 10) { currentSeconds = "0" + currentSeconds; }
                var currentTime = currentHours + ':' + currentMinutes + ':' + currentSeconds;

                return currentTime;
            }

            function initialize() {
                token = "{!JSENCODE(token)}";
                apiKey = "{!ApiKey}";
                sessionId = "{!JSENCODE(sessionId)}";
                userName = "{!JSENCODE(userName)}";
                isExternalUser = {!isExternalUser};

                sfSessionId = "{!session}";

                selfId = "self-feed";
                speakerId = "speaker-feed";
                lastActiveId = "last-active-feed";
                sharingId = "screen-sharing-feed";
                hiddenId = "hidden-feeds";
                selfContainerId = "self-feed-container";

                countFlag = false;
                subsCounts = 0;
                audioSourceChanged = false;
                videoSourceChanged = false;
                publishAudio = false;
                publishVideo = false;
                sessionJoined = false;
                deviceSettingsOpen = false;
                isPublishingScreenShare = false;
                isSubscribedScreenShare = false;
                isScreenShareLocked = false;

                timer.init();

                session = OT.initSession(apiKey, sessionId);

                // listeners for subscribed streams
                session.on(STREAM_CREATED_EVT, handleSubscriberStreamCreated);
                session.on(STREAM_DESTROYED_EVT, handleSubscriberStreamDestroyed);
                session.on(SIGNAL_EVT_PREFIX + SCREENSHARE_LOCK_EVT, handleLockScreenShare);

                activeSpeakerArray = new KeyArray(2);
                var currTime = getCurrentTime();
                /** Checking if Meeting Time has ended or not before joining*/
                if(currTime > jsAutoDisconnectMeetingTime){
                   toggle('#tv-end-screen-container', 'slds-hide');
                }else{
                    toggle('#call-preview-screen-container', 'slds-hide');
                    OT.getUserMedia().then(() => {
                        var publisherProperties = {showControls: false};
                        previewPublisher = OT.initPublisher('cameraOnContainer', publisherProperties);
                        document.getElementById("microphone-toggle").disabled = false;
                        document.getElementById("camera-toggle").disabled = false;
                        document.getElementById("tv-join-button").disabled = false;
                        document.getElementById("tv-join-button").classList.remove("join-button-disabled");
                        previewPublisher.on('streamCreated', function(event) {

                        });
                    }).catch((error) => {
                        if(error.name == 'OT_USER_MEDIA_ACCESS_DENIED'){
                            let previewScreen = document.getElementById("preview-screen");
                            if(previewScreen!= null && previewScreen.classList.contains('preview-tv')){
                                previewScreen.classList.remove('preview-tv');
                                previewScreen.classList.add('preview-tv-error');
                            }
                            toggle('#permission-error', 'slds-hide');
                        }
                    });

                    window.addEventListener('resize', function (event) {
                        resizeSpeakerTile();
                    });
                    // setup hover states
                    [
                        document.querySelector('.button--video'),
                        document.querySelector('.button--audio'),
                        document.querySelector('.button--sharing')

                    ].forEach(item => {
                        item.addEventListener('mouseover', event => {
                            if (!item.classList.contains('active')) {
                                item.classList.add('button-hover-state');
                            }
                        })

                        item.addEventListener('mouseout', event => {
                            item.classList.remove('button-hover-state');
                        })
                    });
                }
            }

            function toggleAudioPreview(){
                let audioToggle = document.getElementById("audio-toggle-background");
                if(audioToggle.classList.contains('active-toggle-background')){
                    audioToggle.classList.remove('active-toggle-background');
                }else{
                    audioToggle.classList.add('active-toggle-background');
                }
                toggle('#audio-off-icon', 'slds-hide');
                toggle('#audio-on-icon', 'slds-hide');
                toggleAudio();
            }

            function toggleVideoPreview(){
                let videoToggle = document.getElementById("video-toggle-background");
                toggle('#video-off-icon', 'slds-hide');
                toggle('#video-on-icon', 'slds-hide');
                if(videoToggle.classList.contains('active-toggle-background')){
                    videoToggle.classList.remove('active-toggle-background');
                }else{
                    videoToggle.classList.add('active-toggle-background');
                }
                toggle('#cameraOnContainer', 'slds-hide');
                toggle('#cameraOffContainer', 'slds-hide');
                toggleVideo();
            }

            class KeyArray {
                maxSize;
                data;
                order;

                constructor(maxSize) {
                    this.maxSize = maxSize;
                    this.order = this.getArray(maxSize);
                    this.data = {};
                }

                get(index) {
                    if (this.order[index]) {
                        return this.data[this.order[index]];
                    }
                }

                add(key, value) {
                    // only push into the array if the
                    // order[0] is not the same as key
                    // otherwise we could overwrite good data
                    // of the last active speaker with a dupe
                    if (this.order[0] !== key) {
                        this.order.unshift(key);
                        this.data[key] = value;
                    }
                }

                remove(key) {
                    if (!this.isEmpty()) {
                        var index = this.order.indexOf(key);
                        if (index > -1) {
                            this.order.splice(index, 1);
                        }
                    }
                }

                addToEnd(key, value) {
                    this.order[this.maxSize - 1] = key;
                    this.data[key] = value;
                }

                isEmpty() {
                    return this.order.length === 0;
                }

                length() {
                    return this.order.length;
                }

                getArray(length) {
                    var array = new Array();

                    array.unshift = function () {
                        if (this.length >= length) {
                            this.pop();
                        }
                        return Array.prototype.unshift.apply(this, arguments);
                    }
                    return array;
                }
            }
        </script>

        <apex:outputPanel layout="none" rendered="{!isSessionJoinable == true}">
            <script type="text/javascript">
                window.addEventListener('load', initialize);
            </script>
        </apex:outputPanel>

        <style>
            body {
                background-color: white !important;
                font-family: 'Proxima Nova' !important;
            }

            .slds-scope {
                color: #000000 !important;
                font-family: 'Proxima Nova' !important;
                background: #f5f6fa !important;
            }

            .hideBanner {
                display: none;
            }

            .televisitBanner {
                border: 1px solid #e2e2e2;
                background: rgb(254, 147, 57);
                padding: 3px 10px 3px 10px;
                box-shadow: rgb(0 0 0 / 10%) 0px 20px 25px -5px, rgb(0 0 0 / 4%) 0px 10px 10px -5px;
                margin-top: -50px;
                font-size: 14px;
                position: absolute;
                margin-left: auto;
                margin-right: auto;
                left: 0;
                right: 0;
                text-align: center;
                width: 50%;
            }

            .tv_warning {
                text-align: left;
            }

            .televisit-session {
                background-color: #f5f6fa !important;
                justify-content: center;
                border: none !important;
            }

            .rejoin-container {
                height: 800px;
                background: #f5f6fa;
            }

            .televisit-rejoin {
                justify-content: center;
                height: 202px;
                width: 401px;
            }

            .preview-tv {
                justify-content: center;
                height: 650px;
            }

            .preview-tv-error {
                justify-content: center;
                height: 732px;
            }

            .setting-icon-show {
                display: block;
            }

            .televisit-end {
                color: #999999;
                font-size: 24px;
                font-weight: 600;
                letter-spacing: 0;
                line-height: 37px;
            }

            .extendCallListUpdatedClass {
                background: rgb(254, 147, 57);
                border: none;
                margin-left: 20px;
            }

            .cp-main-logo {
                height: 36px;
                width: 28.5px;
                fill: #595959 !important;
            }

            .end-call-logo {
                height: 40px;
                width: 40px;
                fill: #595959 !important;
            }

            .rejoin-buttons {
                margin-top: 24px;
            }

            .rejoin-button {
                color: white !important;
                padding: 8px 12px;
                background-color: #0768fd;
                border: none;
                border-radius: 4px;
                font-size: 16px !important;
                font-weight: 500 !important;
                margin-left: 10px !important;
            }

            .close-tv-button {
                background: transparent;
                border: none;
                font-size: 16px !important;
                color: #0768fd !important;
                font-weight: 500 !important;
                letter-spacing: 0;
                line-height: 24px !important;
                text-align: center;
                margin-right: 10px !important;
            }

            .slds-col_bump-left {
                display: flex;
            }

            .permission-error-message {
                color: #e20000;
                font-size: 16px;
                letter-spacing: 0;
                line-height: 24px;
                text-align: center;
            }

            @media screen and (min-width: 48em) {
                body {
                    background-color: #f6f7fb !important;
                }
            }

            #header {
                padding: 1em;
                background: rgb(0, 118, 174);
                background: url({!URLFOR($Resource.TokboxAssets, '/images/header-wave.png')})
                        no-repeat left top,
                    linear-gradient(270deg, rgba(0, 118, 174, 1) 0%, rgba(37, 0, 86, 1) 100%);
                color: white;
                text-align: center;
            }

            .top-margin-container {
                margin-top: 2.5em;
            }

            @media screen and (min-width: 48em) {
                #header {
                    padding: 1em;
                    display: block;
                }
            }

            #main {
                background-color: white;
            }

            @media screen and (min-width: 48em) {
                #main {
                    border-radius: 0.5em;
                    box-shadow: 0px 4px 14px 0px rgba(0, 0, 0, 0.04);
                    border: 1px solid #e9e9e9;
                }
            }

            #call-container {
                overflow: hidden;
            }

            .heading-container {
                padding: 0 1.5rem 0.75rem;
            }

            .heading-container .slds-col:first-child {
                max-width: 200px;
            }

            @media screen and (min-width: 48em) {
                .heading-container {
                    padding: 1.5rem;
                    padding-left: 0.75rem;
                }

                .heading-container .slds-col:first-child {
                    max-width: 250px;
                }

                .speaker-container .speaker-feed,
                .share-container .screen-sharing-feed {
                    min-height: 415px;
                    max-height: 515px;
                }

                .height-full {
                    height: 100%;
                }
            }

            .speaker-container .speaker-feed,
            .share-container .screen-sharing-feed {
                max-width: 960px;
                width: 100%;
            }

            .firstAttendeeMsg {
                max-width: 960px;
                width: 25%;
                background-color: #f6f7fb;
                vertical-align: middle;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }

            .video-container {
                background: #f6f7fb;
            }

            .call-window-header {
                border: 1px solid #e9e9e9;
            }

            .speaker-container {
                background-color: #f6f7fb;
                text-align: center;
                position: relative;
            }

            .participants header {
                background-color: #e9e9e9;
            }

            .participants h2 {
                font-weight: bold;
            }

            .OT_widget-container {
                border-radius: 8px;
            }

            .slds-button-circle {
                border-radius: 50%;
                width: 58px;
                height: 58px;
                outline: none;
                box-shadow: none !important;
                border: 1px solid transparent;
            }

            .slds-button-circle.button_pink {
                background-color: #df216d;
                border-color: #df216d;
                color: white;
            }

            .slds-button-circle.button_white {
                background-color: white;
                border-color: #b5b5b5;
                color: #0768fd;
            }

            .slds-button-circle.button_white svg {
                fill: #0768fd;
            }

            .slds-button-circle.button_blue {
                background-color: #0768fd;
                border-color: #0768fd;
                color: white;
            }

            .slds-button-circle.button_blue svg {
                fill: white;
            }

            .slds-button-circle.button_pink svg {
                fill: white;
                transform: rotate(135deg);
                transform-origin: 50% 50%;
            }

            .slds-scope button.slds-button-circle {
                appearance: none;
                margin-left: 1em;
                padding: 5px;
            }

            button svg {
                width: 22px;
                height: 22px;
            }

            .button-hover-state {
                background-color: #ecf3ff !important;
                border-color: #a5c9fe !important;
                color: white !important;
            }

            @media screen and (min-width: 48em) {
                .timer {
                    margin-right: 2em;
                }
            }

            @media screen and (min-width: 576px) {
                .people-icon-wrapper {
                    display: none;
                }
                .participant-wrapper {
                    display: none;
                }
            }

            @media screen and (max-width: 576px) {
                .people-icon-wrapper {
                    display: inline-block;
                    padding: 10px;
                }
                .televisitBanner {
                    margin-top: 50px;
                    padding: unset;
                    width: 90%;
                    z-index: 9;
                }
                .slds-button-circle {
                    width: 50px;
                    height: 50px;
                }

                .slds-scope button.slds-button-circle {
                    margin-left: 0.5em;
                }
                .height-full {
                    height: 550px !important;
                }
            }

            @media screen and (max-width: 900px) {
                .tv_warning {
                    text-align: left;
                    padding-left: 8px;
                }
                .slds-button-circle {
                    width: 50px;
                    height: 50px;
                }

                .slds-scope button.slds-button-circle {
                    margin-left: 0.5em;
                }

                .height-full {
                    height: 520px !important;
                }
            }

            .main-container-open {
                filter: blur(2px) !important;
            }

            .timer {
                background-color: #595959;
                padding: 0.25em 0.5em;
                color: white;
                display: inline-block;
                width: 50px;
                text-align: center;
            }

            .icon-people {
                height: 16px;
                width: 16px;
            }

            .icon-settings {
                height: 16px;
                width: 16px;
                display: inline-block;
            }

            .participant-header {
                padding: 10px;
                border-bottom: 1px solid rgb(201 199 197);
            }

            .people-container {
                height: 100%;
                position: fixed;
                z-index: 10;
                right: 0;
                background-color: #fdfdfd;
                overflow-x: hidden;
                transition: 0.5s;
                width: 0;
                top: 75px;
            }

            .people-container .closebtn {
                position: absolute;
                right: 0px;
                font-size: 36px;
                margin-right: 5px;
            }

            @media screen and (max-height: 450px) {
                .people-container {
                    padding-top: 15px;
                }

                .slds-button-circle {
                    width: 50px;
                    height: 50px;
                }

                .slds-scope button.slds-button-circle {
                    margin-left: 0.5em;
                }
            }

            .slds-card {
                display: flex;
                flex-direction: column;
                height: 100vh;
                z-index: 9001;
            }

            @media screen and (min-width: 48em) {
                .slds-card {
                    width: 50em;
                    position: absolute !important;
                    top: 50%;
                    left: 50%;
                    transform: translate(-50%, -50%);
                    border: none !important;
                    height: auto;
                }
                .televisitBanner {
                    z-index: 9;
                }
            }

            .slds-card__body {
                flex: 1;
            }

            @media screen and (min-width: 48em) {
                .slds-card__body {
                    flex: none;
                }
            }

            .slds-card .gradient {
                width: 100%;
                height: 0.5em;
                border-radius: 0.25em 0.25em 0 0;
                background: rgb(0, 118, 174);
                background: linear-gradient(
                    270deg,
                    rgba(0, 118, 174, 1) 0%,
                    rgba(37, 0, 86, 1) 100%
                );
            }

            .slds-modal__container .gradient {
                width: 100%;
                height: 0.5em;
                border-radius: 0.25em 0.25em 0 0;
                background: rgb(0, 118, 174);
                background: linear-gradient(
                    270deg,
                    rgba(0, 118, 174, 1) 0%,
                    rgba(37, 0, 86, 1) 100%
                );
            }

            @media (min-width: 48em) {
                .slds-modal__container {
                    width: 30rem !important;
                    max-width: 30rem !important;
                }
            }

            .visitPreview {
                margin: 0px 0px 24px 24px;
                font-size: 20px;
                font-weight: 600;
                letter-spacing: 0;
                line-height: 32px;
                text-align: left;
            }

            .slds-card__footer {
                overflow: hidden !important;
            }

            .slds-backdrop {
                background: #f5f6fa !important;
            }

            .slds-popover {
                z-index: 90002 !important;
                min-width: 25em !important;
                padding: 1em !important;
            }

            .slds-popover__header {
                border-bottom: none !important;
            }

            .slds-popover__body .device-settings-select {
                width: 100%;
                height: 100%;
                border-color: #d3d3d3;
                border-radius: 5px;
            }

            .slds-text-bold {
                font-weight: 800 !important;
            }

            .welcome-fields {
                flex-direction: column;
            }

            .welcome-fields > .slds-col {
                padding-top: 1em;
                padding-bottom: 1em;
            }

            @media screen and (min-width: 48em) {
                .welcome-fields {
                    flex-direction: row;
                }

                .welcome-fields > .slds-col {
                    padding-top: 0;
                    padding-bottom: 0;
                }
            }

            .welcome-device-settings {
                left: 11em;
                top: -9.5em;
                position: absolute;
            }

            .in-meeting-device-settings {
                right: -1em;
                top: 3.5em;
                position: absolute;
            }

            .in-meeting-device-settings .option-buttons {
                display: block;
            }

            .settings-icon-wrapper {
                display: inline-block;
                padding: 0 0.5em;
                position: relative;
                top: -4px;
            }

            .settings-button:focus {
                border-radius: 1em;
                box-shadow: none !important;
                border: 0px;
            }

            .participant-item {
                border-bottom: 1px solid #f6f7fb;
                padding: 1em;
            }

            .participant-list {
                max-height: 56em !important;
            }

            .attendee-list {
                max-height: 56em !important;
            }

            .session-unjoinable {
                color: #999999;
            }

            .session-unjoinable-header {
                font-weight: 500 !important;
            }

            .external-user-validation-container {
                padding-left: 6em;
                padding-right: 6em;
                padding-top: 1em;
            }

            #screen-sharing-username-text {
                display: inline-block;
                position: relative;
                color: #f6f7fb;
                background: black;
                padding: 0 0.5em 0 0.5em;
                top: -19px;
                border-radius: 0.125em;
            }

            .OT_video-poster {
                background-image: none;
                background-color: #595959;
                opacity: 1;
            }

            @media screen and (min-width: 48em) {
                .video-container {
                    background-color: #f6f7fb;
                }
            }

            @media screen and (max-width: 768px) {
                .mob-timer {
                    position: absolute;
                    bottom: 6rem;
                    left: 18.7rem;
                    z-index: 999;
                }
                .setting-icon-show {
                    display: block;
                }
                .settings-icon-wrapper {
                    display: inline-block;
                    padding: 0 0.5em;
                    position: relative;
                    top: 6px;
                }
                .slds-button-circle {
                    width: 50px;
                    height: 50px;
                }

                .slds-scope button.slds-button-circle {
                    margin-left: 0.5em;
                }
                .height-full {
                    height: 550px !important;
                }
            }

            .OT_name.OT_mode-off {
                display: block !important;
                opacity: 100 !important;
                top: 0 !important;
            }

            .last-active-feed {
                height: 9em;
            }

            .self-feed-container {
                height: 9em;
            }

            .ctrls-feeds-action-bar.speaker-view {
                margin-top: 1rem;
            }

            .ctrls-feeds-action-bar.share-view {
                margin-top: 0rem;
            }

            select.extendCallListUpdatedClass option {
                background: #fff;
                color: #000;
            }

            .preview-container {
                height: 318px;
                border: 1px solid #f2f2f2;
                border-radius: 6px;
                box-shadow: 0 4px 4px 0 rgb(0 0 0 / 4%);
            }

            .camera-screen {
                width: 100% !important;
                height: 260px !important;
            }

            .camera-screen > .OT_widget-container {
                border-top-left-radius: 8px !important;
                border-top-right-radius: 8px !important;
                border-bottom-left-radius: 0px !important;
                border-bottom-right-radius: 0px !important;
            }
            .camera-off-message {
                color: #b5b5b5;
                text-align: center;
                font-size: 18px;
                letter-spacing: 0;
                line-height: 28px;
            }
            .preview-buttons {
                height: 55px;
            }
            .preview-buttons-container {
                height: 100%;
                border-top: 1px solid #f2f2f2;
            }
            .preview-left-button {
                height: 100%;
                width: 100%;
                border-right: 1px solid #f2f2f2;
            }

            .preview-right-button {
                height: 100%;
                width: 100%;
            }
            .join-button {
                background-color: #0768fd !important;
                border-color: #0768fd !important;
                border-radius: 14px !important;
                height: 42px;
                width: 100%;
                box-shadow: 0 4px 16px 0 rgba(0, 0, 0, 0.04), 0 4px 8px 0 rgba(7, 104, 253, 0.32);
            }
            .join-button-disabled {
                opacity: 0.4;
            }
            .back-button {
                height: 40px;
                color: #0768fd !important;
                font-weight: 500 !important;
                letter-spacing: 0;
                line-height: 24px !important;
                text-align: center;
                border-radius: 14px !important;
            }
            .active-toggle-background {
                background-color: #00c221 !important;
                border-color: #00c221 !important;
            }
        </style>
    </head>

    <body
        class="slds-scope"
        xmlns="http://www.w3.org/2000/svg"
        xmlns:xlink="http://www.w3.org/1999/xlink"
    >
        <!--OMSF-5206-->
        <header id="header" class="page-header">
            <h1 class="slds-text-heading_small">{!appNamestr}</h1>
        </header>

        <!--Call Preview Screen -->
        <apex:outputPanel rendered="{!isSessionJoinable == true}">
            <div class="call-preview-screen slds-hide" id="call-preview-screen-container">
                <div id="welcome-container">
                    <apex:outputPanel rendered="{!isSessionJoinable == true}">
                        <div
                            class="slds-grid slds-grid_vertical-align-center slds-grid_align-center rejoin-container"
                        >
                            <div class="slds-col">
                                <div class="slds-grid">
                                    <div class="slds-col slds-size_1-of-1">
                                        <div
                                            id="preview-screen"
                                            class="slds-text-align_center preview-tv"
                                        >
                                            <div class="slds-modal__container visit-preview">
                                                <div class="gradient"></div>
                                                <div
                                                    class="slds-modal__content slds-p-around_medium height-full"
                                                >
                                                    <div
                                                        class="slds-col slds-text-heading--small slds-text-bold slds-text-align_left"
                                                    >
                                                        {!$Label.Visit_Preview}
                                                    </div>
                                                    <div
                                                        class="slds-size_1-of-1 slds-m-top_small preview-container"
                                                    >
                                                        <div
                                                            id="cameraOnContainer"
                                                            class="camera-screen slds-hide"
                                                        ></div>
                                                        <div
                                                            id="cameraOffContainer"
                                                            class="camera-screen slds-align_absolute-center"
                                                        >
                                                            <div class="slds-grid slds-wrap">
                                                                <div
                                                                    class="slds-col slds-size_1-of-1 slds-align_absolute-center slds-m-bottom_small"
                                                                >
                                                                    <svg
                                                                        width="26"
                                                                        height="26"
                                                                        fill="currentColor"
                                                                        class="camera-off-message"
                                                                        viewBox="0 0 16 16"
                                                                    >
                                                                        <path
                                                                            fill-rule="evenodd"
                                                                            d="M10.961 12.365a1.99 1.99 0 0 0 .522-1.103l3.11 1.382A1 1 0 0 0 16 11.731V4.269a1 1 0 0 0-1.406-.913l-3.111 1.382A2 2 0 0 0 9.5 3H4.272l6.69 9.365zm-10.114-9A2.001 2.001 0 0 0 0 5v6a2 2 0 0 0 2 2h5.728L.847 3.366zm9.746 11.925-10-14 .814-.58 10 14-.814.58z"
                                                                        ></path>
                                                                    </svg>
                                                                </div>
                                                                <div
                                                                    class="slds-col slds-size_1-of-1"
                                                                >
                                                                    <label
                                                                        class="slds-align_absolute-center camera-off-message"
                                                                        >{!$Label.TV_CAMERA_OFF}</label
                                                                    >
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div
                                                            id="preview-buttons"
                                                            class="preview-buttons"
                                                        >
                                                            <div
                                                                class="slds-grid preview-buttons-container"
                                                            >
                                                                <div
                                                                    class="slds-col slds-align_absolute-center preview-left-button"
                                                                >
                                                                    <span
                                                                        class="slds-icon_container slds-icon-utility-groups"
                                                                    >
                                                                        <img
                                                                            src="{!$Resource.televisit_icons + '/Camera.svg'}"
                                                                            class="cp-main-logo"
                                                                            id="video-off-icon"
                                                                        />
                                                                        <svg
                                                                            id="video-on-icon"
                                                                            class="slds-icon slds-icon-text-default slds-icon_medium cp-main-logo slds-hide"
                                                                        >
                                                                            <use
                                                                                xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#video')}"
                                                                            ></use>
                                                                        </svg>
                                                                    </span>
                                                                    <div
                                                                        class="slds-form-element slds-p-around_x-small"
                                                                    >
                                                                        <label
                                                                            class="slds-checkbox_toggle slds-grid"
                                                                        >
                                                                            <input
                                                                                id="camera-toggle"
                                                                                type="checkbox"
                                                                                name="camera-checkbox-toggle"
                                                                                value="checkbox-toggle-15"
                                                                                disabled="true"
                                                                                aria-describedby="checkbox-toggle-15"
                                                                                onclick="toggleVideoPreview();"
                                                                            />
                                                                            <span
                                                                                id="checkbox-toggle-15"
                                                                                class="slds-checkbox_faux_container"
                                                                                aria-live="assertive"
                                                                            >
                                                                                <span
                                                                                    id="video-toggle-background"
                                                                                    class="slds-checkbox_faux"
                                                                                ></span>
                                                                            </span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                                <div
                                                                    class="slds-col slds-align_absolute-center preview-right-button"
                                                                >
                                                                    <span
                                                                        class="slds-icon_container slds-icon-utility-groups"
                                                                    >
                                                                        <img
                                                                            src="{!$Resource.televisit_icons + '/Microphone.svg'}"
                                                                            class="cp-main-logo"
                                                                            id="audio-off-icon"
                                                                        />
                                                                        <svg
                                                                            id="audio-on-icon"
                                                                            class="slds-icon slds-icon-text-default slds-icon_medium cp-main-logo slds-hide"
                                                                        >
                                                                            <use
                                                                                xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#unmuted')}"
                                                                            ></use>
                                                                        </svg>
                                                                    </span>
                                                                    <div
                                                                        class="slds-form-element slds-p-around_x-small"
                                                                    >
                                                                        <label
                                                                            class="slds-checkbox_toggle slds-grid"
                                                                        >
                                                                            <input
                                                                                id="microphone-toggle"
                                                                                type="checkbox"
                                                                                name="microphone-checkbox-toggle"
                                                                                value="checkbox-toggle-15"
                                                                                disabled="true"
                                                                                aria-describedby="microphone-permission"
                                                                                onclick="toggleAudioPreview();"
                                                                            />
                                                                            <span
                                                                                id="checkbox-toggle-15"
                                                                                class="slds-checkbox_faux_container"
                                                                                aria-live="assertive"
                                                                            >
                                                                                <span
                                                                                    id="audio-toggle-background"
                                                                                    class="slds-checkbox_faux"
                                                                                ></span>
                                                                            </span>
                                                                        </label>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                        <div
                                                            id="adjust-message"
                                                            class="adjust-message slds-p-around_small slds-p-bottom_none"
                                                        >
                                                            <div
                                                                class="slds-col slds-size_1-of-6"
                                                            ></div>
                                                            <div
                                                                class="slds-col slds-size_4-of-6 slds-align_absolute-center slds-text-body_small slds-text-align_center"
                                                            >
                                                                {!$Label.You_can_also_adjust_these_options_during_the_visit}
                                                            </div>
                                                            <div
                                                                class="slds-col slds-size_1-of-6"
                                                            ></div>
                                                        </div>
                                                        <div
                                                            id="join-button-container"
                                                            class="slds-align_absolute-center slds-p-top_small"
                                                        >
                                                            <div
                                                                class="slds-col slds-size_1-of-6"
                                                            ></div>
                                                            <div
                                                                class="slds-col slds-size_4-of-6 slds-align_absolute-center"
                                                            >
                                                                <button
                                                                    id="tv-join-button"
                                                                    disabled="true"
                                                                    onclick="confirmJoin();"
                                                                    class="slds-button slds-button_brand slds-col slds-align_absolute-center join-button join-button-disabled"
                                                                >
                                                                    {!$Label.Join_Visit}
                                                                </button>
                                                            </div>
                                                            <div
                                                                class="slds-col slds-size_1-of-6"
                                                            ></div>
                                                        </div>
                                                        <div
                                                            id="permission-error"
                                                            class="slds-align_absolute-center permission-error-message slds-p-top_small slds-hide"
                                                        >
                                                            <div
                                                                class="slds-col slds-size_1-of-6"
                                                            ></div>
                                                            <div
                                                                class="slds-col slds-size_4-of-6 slds-align_absolute-center slds-text-align_center"
                                                            >
                                                                {!$Label.You_must_grant_microphone_permission_to_join_televisit}
                                                            </div>
                                                            <div
                                                                class="slds-col slds-size_1-of-6"
                                                            ></div>
                                                        </div>
                                                        <div
                                                            id="back-button"
                                                            class="slds-p-top_small slds-p-bottom_small"
                                                        >
                                                            <div
                                                                class="slds-col slds-size_3-of-8"
                                                            ></div>
                                                            <div
                                                                class="slds-col slds-size_2-of-8 slds-align_absolute-center slds-text-align_center"
                                                            >
                                                                <button
                                                                    id="tv-back-button"
                                                                    class="slds-button slds-col slds-align_absolute-center back-button"
                                                                    onclick="confirmCancel();"
                                                                >
                                                                    {!$Label.Back}
                                                                </button>
                                                            </div>
                                                            <div
                                                                class="slds-col slds-size_3-of-8"
                                                            ></div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </apex:outputPanel>
                </div>
            </div>
            <div
                class="slds-container_large slds-container_center top-margin-container slds-hide"
                id="main"
            >
                <div id="call-container" class="slds-grid slds-wrap">
                    <div class="slds-col">
                        <div
                            class="in-call-header slds-grid slds-grid_align-spread heading-container slds-has-flexi-truncate"
                        >
                            <div class="slds-col">
                                <h1
                                    class="slds-text-heading_medium slds-truncate"
                                    title="{!sessionName}"
                                >
                                    <b>{!sessionName}</b>
                                </h1>
                            </div>

                            <div
                                role="dialog"
                                class="slds-card slds-text-align_center"
                                style="{!IF( attendeeType == 'PP', 'display:none', '')}"
                            >
                                <div id="televisitBanner" class="hideBanner">
                                    <div
                                        class="slds-notify slds-notify_alert slds-alert_warning"
                                        role="alert"
                                        style="color: #fff"
                                    >
                                        <span
                                            class="slds-icon_container slds-icon-utility-warning slds-current-color"
                                        >
                                            <svg aria-hidden="true" class="slds-icon_xx-small">
                                                <use
                                                    xmlns:xlink="http://www.w3.org/1999/xlink"
                                                    style="fill: #fff"
                                                    xlink:href="/apexpages/slds/latest/assets/icons/utility-sprite/svg/symbols.svg#warning"
                                                ></use>
                                            </svg>
                                            <span class="slds-assistive-text">Warning</span> </span
                                        >&nbsp;
                                        <span class="tv_warning"
                                            >Warning - 5 minutes left in call.</span
                                        >

                                        <select
                                            name="extendcallminutes"
                                            id="extendcallminutes"
                                            style="margin-left: 30px"
                                            onchange="callExtendedMinutes()"
                                        >
                                            <option
                                                id="optionExtendCall"
                                                value=""
                                                disabled="true"
                                                selected="true"
                                                hidden="true"
                                            >
                                                Extend Call
                                            </option>
                                            <apex:repeat value="{!extendMeetingOptions}" var="str">
                                                <option value="{!str}">{!str} minutes</option>
                                            </apex:repeat>
                                        </select>
                                        <span style="margin-left: 20px">
                                            <button id="closeButton" onclick="closeBannerPopup()">
                                                X
                                            </button>
                                        </span>
                                    </div>
                                </div>
                            </div>

                            <div class="slds-col_bump-left">
                                <span class="timer mob-timer">
                                    <div id="time">00:00</div>
                                </span>
                                <div
                                    class="slds-form-element settings-icon-wrapper setting-icon-show"
                                >
                                    <button
                                        id="settings-button-in-call"
                                        class="settings-button slds-button slds-button--icon slds-hide"
                                        onclick="toggleDeviceSettingsVisible();"
                                        title="{!$Label.Session_Settings}"
                                    >
                                        <span class="icon-settings">
                                            <svg
                                                id="in-meeting-settings-svg"
                                                xmlns="http://www.w3.org/2000/svg"
                                                width="16px"
                                                height="16px"
                                                viewBox="0 0 24 24"
                                                fill="#706e6b"
                                            >
                                                <g>
                                                    <path
                                                        d="M22.5,9.5 L20.638,9.5 C20.4528844,8.86020053 20.1969683,8.24305021 19.875,7.66 L21.192,6.344 C21.4735125,6.06266785 21.6316798,5.6809913 21.6316798,5.283 C21.6316798,4.8850087 21.4735125,4.50333215 21.192,4.222 L19.777,2.809 C19.1912502,2.22342709 18.2417498,2.22342709 17.656,2.809 L16.338,4.126 C15.7557624,3.80379909 15.1392478,3.54786836 14.5,3.363 L14.5,1.5 C14.5,0.671572875 13.8284271,5.07265313e-17 13,0 L11,0 C10.1715729,-5.07265313e-17 9.5,0.671572875 9.5,1.5 L9.5,3.363 C8.86058285,3.54829525 8.24378346,3.80420495 7.661,4.126 L6.343,2.809 C5.75725022,2.22342709 4.80774978,2.22342709 4.222,2.809 L2.807,4.223 C2.52548749,4.50433215 2.36732023,4.8860087 2.36732023,5.284 C2.36732023,5.6819913 2.52548749,6.06366785 2.807,6.345 L4.125,7.662 C3.80258623,8.24413488 3.54664535,8.86067399 3.362,9.5 L1.5,9.5 C0.671572875,9.5 8.37244157e-16,10.1715729 0,11 L0,13 C1.01453063e-16,13.8284271 0.671572875,14.5 1.5,14.5 L3.362,14.5 C3.54657493,15.1396698 3.80251731,15.756548 4.125,16.339 L2.806,17.658 C2.22042709,18.2437498 2.22042709,19.1932502 2.806,19.779 L4.22,21.193 C4.8154777,21.7555628 5.7465223,21.7555628 6.342,21.193 L7.66,19.876 C8.24308627,20.1981487 8.86021925,20.454393 9.5,20.64 L9.5,22.5 C9.5,23.3284271 10.1715729,24 11,24 L13,24 C13.8284271,24 14.5,23.3284271 14.5,22.5 L14.5,20.64 C15.1394282,20.4547361 15.756231,20.198825 16.339,19.877 L17.657,21.194 C18.2427498,21.7795729 19.1922502,21.7795729 19.778,21.194 L21.192,19.78 C21.7775729,19.1942502 21.7775729,18.2447498 21.192,17.659 L19.875,16.342 C20.1973156,15.7591171 20.4532482,15.141927 20.638,14.502 L22.5,14.502 C22.8981715,14.5020004 23.2800058,14.3436906 23.5613679,14.0619533 C23.84273,13.780216 24.0005309,13.3981711 24,13 L24,11 C24,10.1715729 23.3284271,9.5 22.5,9.5 Z M12,17 C9.23857625,17 7,14.7614237 7,12 C7,9.23857625 9.23857625,7 12,7 C14.7614237,7 17,9.23857625 17,12 C16.9966939,14.7600532 14.7600532,16.9966939 12,17 Z"
                                                    ></path>
                                                </g>
                                            </svg>
                                        </span>
                                    </button>
                                    <div id="in-call-device-settings-container" class="slds-hide">
                                        <div class="slds-popover slds-nubbin--top-right">
                                            <div class="slds-popover__header">
                                                <span
                                                    class="slds-text-heading--x-small slds-text-bold"
                                                >
                                                    {!$Label.DeviceSettings_Header}
                                                </span>
                                            </div>
                                            <div class="slds-popover__body slds-m-left--small">
                                                <div>
                                                    <label for="in-call-video-source-select"
                                                        >{!$Label.DeviceSettings_VideoSource}</label
                                                    >
                                                    <div class="slds-grid slds-gutters">
                                                        <div class="slds-col slds-size_1-of-8">
                                                            <span
                                                                class="slds-icon_container slds-icon__svg--default slds-m-right--small"
                                                            >
                                                                <svg
                                                                    class="slds-icon slds-icon--large slds-icon-text-default slds-p-right_medium"
                                                                    aria-hidden="true"
                                                                >
                                                                    <use
                                                                        xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#video')}"
                                                                    ></use>
                                                                </svg>
                                                            </span>
                                                        </div>
                                                        <div
                                                            class="slds-col slds-size_7-of-8 slds-p-top_x-small slds-p-bottom_x-small"
                                                        >
                                                            <select
                                                                id="in-call-video-source-select"
                                                                class="device-settings-select slds-p-vertical_x-small slds-m-left--small"
                                                            ></select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="slds-m-top--small">
                                                    <label for="in-call-audio-source-select"
                                                        >{!$Label.DeviceSettings_AudioSource}</label
                                                    >
                                                    <div class="slds-grid slds-gutters">
                                                        <div class="slds-col slds-size_1-of-8">
                                                            <span
                                                                class="slds-icon_container slds-icon__svg--default slds-m-right--small"
                                                            >
                                                                <svg
                                                                    class="slds-icon slds-icon--large slds-icon-text-default slds-p-right_medium"
                                                                    aria-hidden="true"
                                                                >
                                                                    <use
                                                                        xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#unmuted')}"
                                                                    ></use>
                                                                </svg>
                                                            </span>
                                                        </div>
                                                        <div
                                                            class="slds-col slds-size_7-of-8 slds-p-top_x-small slds-p-bottom_x-small"
                                                        >
                                                            <select
                                                                id="in-call-audio-source-select"
                                                                class="device-settings-select slds-p-vertical_x-small slds-m-left--small"
                                                            ></select>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="option-buttons slds-m-top--large">
                                                    <button
                                                        class="slds-button slds-button--neutral slds-col"
                                                        onclick="toggleDeviceSettingsVisible();"
                                                    >
                                                        {!$Label.Cancel}
                                                    </button>
                                                    <button
                                                        class="slds-button slds-button--brand slds-col"
                                                        onclick="applyDeviceSettings();"
                                                    >
                                                        {!$Label.Apply}
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <!--OMSF-5607-->
                                <div class="people-icon-wrapper">
                                    <button
                                        id="people-button-in-call"
                                        class="people-button slds-button slds-button--icon"
                                        onclick="showparticipantListMobile();"
                                    >
                                        <span class="icon-people">
                                            <svg
                                                class="slds-button__icon slds-button__icon"
                                                aria-hidden="true"
                                            >
                                                <use
                                                    xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#people')}"
                                                ></use>
                                            </svg>
                                        </span>
                                    </button>
                                </div>
                            </div>
                        </div>

                        <div class="slds-grid call-content-container">
                            <div
                                class="slds-col slds-size_1-of-4 slds-show_medium participants-container"
                            >
                                <div class="participants">
                                    <header
                                        class="slds-p-left_small slds-p-top_xx-small slds-p-bottom_xx-small"
                                    >
                                        <h2 class="slds-text-heading_x-small">
                                            {!$Label.Participants}
                                        </h2>
                                    </header>
                                    <apex:outputPanel id="participant-list">
                                        <ul
                                            class="participant-list slds-text-body_small slds-scrollable--y"
                                        >
                                            <apex:repeat value="{!attendees}" var="attendee">
                                                <li
                                                    id="{!attendee.streamId}"
                                                    class="participant-item"
                                                >
                                                    {!attendee.name}
                                                </li>
                                            </apex:repeat>
                                        </ul>
                                    </apex:outputPanel>
                                </div>
                            </div>
                            <div
                                class="slds-col slds-size_1-of-1 slds-medium-size_3-of-4 slds-p-around_large video-container"
                            >
                                <div id="speaker-container" class="speaker-container">
                                    <div class="firstAttendeeMsg" id="firstAttendeeMsg">
                                        <span
                                            class="slds-icon_container slds-icon-utility-groups slds-align_absolute-center"
                                        >
                                            <svg
                                                class="slds-icon slds-icon-text-default slds-icon_small"
                                            >
                                                <use
                                                    xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#groups')}"
                                                ></use>
                                            </svg>
                                        </span>
                                        <span
                                            class="slds-align_absolute-center slds-text-heading--small"
                                            style="font-size: 13pt; color: #999999"
                                        >
                                            {!$Label.First_Attendee}
                                        </span>
                                    </div>
                                    <div id="speaker-feed" class="speaker-feed"></div>
                                </div>

                                <div class="share-container slds-hide">
                                    <div id="screen-sharing-feed" class="screen-sharing-feed"></div>

                                    <div id="screen-sharing-username-text">
                                        <apex:outputPanel id="screen-sharing-username-text">
                                            <apex:outputText
                                                value="{!$Label.ScreenSharePublisherUsernameText}"
                                            >
                                                <apex:param value="{!sharingUserName}" />
                                            </apex:outputText>
                                        </apex:outputPanel>
                                    </div>
                                </div>

                                <div
                                    class="ctrls-feeds-action-bar speaker-view slds-grid slds-gutters slds-grid_align-spread slds-clearfix"
                                >
                                    <div
                                        id="last-active-feed"
                                        class="last-active-feed slds-col slds-size_1-of-4 slds-show_small"
                                    ></div>
                                    <div
                                        id="self-feed-container"
                                        class="self-feed-container slds-col slds-size_1-of-4 slds-x-small-size_1-of-3 slds-small-size_1-of-4"
                                    ></div>

                                    <div
                                        id="controls"
                                        class="controls slds-col slds-align-bottom"
                                        style="padding-left: 0"
                                    >
                                        <div class="slds-grid slds-float_right">
                                            <button
                                                class="slds-col button--audio slds-button-circle button_white"
                                                type="button"
                                                onclick="toggleAudio();"
                                                title="{!$Label.Audio_Hover_Message_Off}"
                                                data-on="{!$Label.Audio_Hover_Message_Off}"
                                                data-off="{!$Label.Audio_Hover_Message_On}"
                                            >
                                                <span class="slds-assistive-text">Audio</span>
                                                <svg
                                                    class="icon-audioOn slds-hide"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    viewBox="0 0 24 24"
                                                >
                                                    <path
                                                        d="M18,6.25a6,6,0,0,0-12,0V11a.5.5,0,0,0,.5.5h11A.5.5,0,0,0,18,11Z"
                                                    />
                                                    <path
                                                        d="M12,18a6,6,0,0,0,5.77-4.364A.5.5,0,0,0,17.289,13H6.711a.5.5,0,0,0-.481.636A6,6,0,0,0,12,18Z"
                                                    />
                                                    <path
                                                        d="M21,8.25a1,1,0,0,0-1,1V11.5a7.915,7.915,0,0,1-8,8,7.915,7.915,0,0,1-8-8V9.25a1,1,0,0,0-2,0V11.5a9.878,9.878,0,0,0,8.779,9.929.25.25,0,0,1,.221.248V22.75a1,1,0,0,0,2,0V21.677a.251.251,0,0,1,.221-.248A9.878,9.878,0,0,0,22,11.5V9.25A1,1,0,0,0,21,8.25Z"
                                                    />
                                                </svg>
                                                <svg
                                                    class="icon-audioOff"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    viewBox="0 0 24 24"
                                                >
                                                    <path
                                                        d="M12,20a7.508,7.508,0,0,1-7.5-7.5V10a1,1,0,0,0-2,0v2.5a9.514,9.514,0,0,0,8.282,9.422.249.249,0,0,1,.218.248V23a1,1,0,0,0,2,0v-.83a.249.249,0,0,1,.218-.248,9.433,9.433,0,0,0,3.859-1.4.25.25,0,0,0,.043-.388l-1.091-1.091a.25.25,0,0,0-.3-.04A7.448,7.448,0,0,1,12,20Z"
                                                    />
                                                    <path
                                                        d="M6.427,9.447A.25.25,0,0,0,6,9.623V12.5a6,6,0,0,0,8.471,5.467.25.25,0,0,0,.074-.4Z"
                                                    />
                                                    <path
                                                        d="M23.707,22.3l-3.952-3.952a.248.248,0,0,1-.026-.322A9.453,9.453,0,0,0,21.5,12.5V10a1,1,0,0,0-2,0v2.5a7.459,7.459,0,0,1-1.157,4,.249.249,0,0,1-.184.114.246.246,0,0,1-.2-.071l-.728-.727a.251.251,0,0,1-.039-.3A5.963,5.963,0,0,0,18,12.5V6A6,6,0,0,0,6.244,4.309a.251.251,0,0,1-.417.106L1.707.3A1.013,1.013,0,0,0,.293.3a1,1,0,0,0,0,1.414l22,22,0,0,0,0,.007.007a1,1,0,0,0,1.4-1.425Z"
                                                    />
                                                </svg>
                                            </button>
                                            <button
                                                class="slds-col button--video slds-button-circle button_white"
                                                type="button"
                                                onclick="toggleVideo();"
                                                title="{!$Label.Video_Hover_Message_Off}"
                                                data-on="{!$Label.Video_Hover_Message_Off}"
                                                data-off="{!$Label.Video_Hover_Message_On}"
                                            >
                                                <svg
                                                    class="icon-videoOn slds-hide"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    viewBox="0 0 24 24"
                                                >
                                                    <rect
                                                        x="0.25"
                                                        y="5.499"
                                                        width="15"
                                                        height="13"
                                                        rx="1"
                                                        ry="1"
                                                    />
                                                    <path
                                                        d="M23.513,6.074a.5.5,0,0,0-.487-.022l-6,3a.5.5,0,0,0-.276.448v5a.5.5,0,0,0,.276.447l6,3a.5.5,0,0,0,.724-.447V6.5A.5.5,0,0,0,23.513,6.074Z"
                                                    />
                                                </svg>
                                                <svg
                                                    class="icon-videoOff"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    viewBox="0 0 24 24"
                                                >
                                                    <path
                                                        d="M3.165,6.432a.251.251,0,0,0-.279-.051A1.5,1.5,0,0,0,2,7.75v9a1.5,1.5,0,0,0,1.5,1.5H14.379a.25.25,0,0,0,.177-.427Z"
                                                    />
                                                    <path
                                                        d="M21.737,7.451l-3,1.711A1.447,1.447,0,0,0,18,10.412v3.676a1.449,1.449,0,0,0,.737,1.25l3,1.711A1.5,1.5,0,0,0,24,15.8V8.7A1.5,1.5,0,0,0,21.737,7.451Z"
                                                    />
                                                    <path
                                                        d="M17.073,15.659A.249.249,0,0,1,17,15.482V7.75a1.5,1.5,0,0,0-1.5-1.5H7.768a.249.249,0,0,1-.177-.073L1.707.293A1,1,0,0,0,.44.172.984.984,0,0,0,.293.293a1,1,0,0,0,0,1.414l22,22a1,1,0,0,0,1.414-1.414Z"
                                                    />
                                                </svg>
                                                <span class="slds-assistive-text"
                                                    >{!$Label.WelcomeModal_Video}</span
                                                >
                                            </button>
                                            <button
                                                class="slds-col button--sharing slds-button-circle button_white slds-show_medium"
                                                type="button"
                                                onclick="toggleSharing();"
                                                title="{!$Label.Screen_Share_Hover_Message_Off}"
                                                data-on="{!$Label.Screen_Share_Hover_Message_Off}"
                                                data-off="{!$Label.Screen_Share_Hover_Message_On}"
                                            >
                                                <span class="slds-assistive-text"
                                                    >{!$Label.Screen_Share}</span
                                                >
                                                <svg
                                                    class="icon-startShare"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    viewBox="0 0 24 24"
                                                >
                                                    <path
                                                        d="M18.5,7H15.25a.25.25,0,0,0-.25.25V11a3,3,0,0,1-6,0V7.248A.25.25,0,0,0,8.75,7H5.5a2,2,0,0,0-2,2V22a2,2,0,0,0,2,2h13a2,2,0,0,0,2-2V9A2,2,0,0,0,18.5,7Z"
                                                    />
                                                    <path
                                                        d="M11,11a1,1,0,0,0,2,0V5.748a.25.25,0,0,1,.25-.25H15.5a1,1,0,0,0,.707-1.707l-3.5-3.5a1,1,0,0,0-1.414,0l-3.5,3.5A1,1,0,0,0,8.5,5.5h2.25a.25.25,0,0,1,.25.25Z"
                                                    />
                                                </svg>
                                                <svg
                                                    class="icon-stopShare slds-hide"
                                                    width="24px"
                                                    height="24px"
                                                    viewBox="0 0 24 24"
                                                    version="1.1"
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    xmlns:xlink="http://www.w3.org/1999/xlink"
                                                >
                                                    <defs>
                                                        <path
                                                            d="M6.65513196,17.7820385 L7.9992822,19.1206515 L9.34487068,17.7820385 C9.7229809,17.4055226 10.3343294,17.4055226 10.7124396,17.7820385 C11.088491,18.1565042 11.0897764,18.7649185 10.7153107,19.1409699 L10.7124396,19.143841 L9.3672822,20.4826515 L10.7156671,21.8254455 C11.0930417,22.2012283 11.0943322,22.8117829 10.7185494,23.1891575 L10.6761352,23.2292483 L10.6761352,23.2292483 C10.2478609,23.6101943 9.59569845,23.5868795 9.1957203,23.1763235 L7.9482822,21.8956515 L6.60973276,23.2292483 C6.23162254,23.6057642 5.62027402,23.6057642 5.2421638,23.2292483 C4.86611244,22.8547826 4.86482701,22.2463683 5.2392927,21.8703169 C5.24024771,21.8693579 5.24120475,21.8684009 5.2421638,21.8674458 L6.6012822,20.5126515 L5.27715792,19.1541307 C4.90407364,18.7711798 4.90871287,18.1592884 5.28756082,17.7820385 C5.66567182,17.4055225 6.27702096,17.4055225 6.65513196,17.7820385 Z M5.13235294,6.5 C5.23330433,6.5 5.31851667,6.56783732 5.34467742,6.66055264 L5.35294118,6.71882353 L5.35294118,10.0294118 C5.35294118,11.491342 6.53806978,12.6764706 8,12.6764706 C9.40570213,12.6764706 10.5554856,11.5807526 10.6418511,10.1968159 L10.6470588,10.0294118 L10.6470588,6.72058824 C10.6470588,6.6190653 10.7156427,6.53356098 10.809006,6.50787962 L10.8676471,6.5 L13.7352941,6.5 C14.6611833,6.5 15.4205301,7.21305238 15.4941501,8.11997256 L15.5,8.26470588 L15.5,19.7352941 C15.5,20.6611833 14.7869476,21.4205301 13.8800274,21.4941501 L13.7352941,21.5 L13,21.5 L13,17.5 C13,16.3954305 12.1045695,15.5 11,15.5 L11,15.5 L5,15.5 C3.8954305,15.5 3,16.3954305 3,17.5 L3,17.5 L3,21.5 L3,21.5 L2.26470588,21.5 C1.33881674,21.5 0.57946991,20.7869476 0.505849949,19.8800274 L0.5,19.7352941 L0.5,8.26470588 C0.5,7.33881674 1.21305238,6.57946991 2.11997256,6.50584995 L2.26470588,6.5 L5.13235294,6.5 Z M8.53821957,0.186352523 L8.62922201,0.268347633 L11.7397668,3.47620341 C11.9938609,3.73832579 12.0698595,4.13247261 11.9323344,4.47490474 C11.8100898,4.77928886 11.5405269,4.98954743 11.2297168,5.03256931 L11.1114367,5.0407205 L9.11180082,5.0407205 C9.00954448,5.0407205 8.92342247,5.11196087 8.89755559,5.20894054 L8.88961905,5.26985305 L8.88961905,10.0834698 C8.88961905,10.5896554 8.49172238,11 8.00089197,11 C7.54781774,11 7.17392967,10.6503573 7.11908934,10.1984374 L7.11216489,10.0834698 L7.11216489,5.27168611 C7.11216489,5.16623077 7.04308561,5.0774145 6.94904784,5.05073839 L6.88998312,5.04255356 L4.8903472,5.04255356 C4.53016704,5.04321962 4.20521263,4.81962593 4.06752554,4.47638883 C3.94513703,4.17128919 3.99222766,3.82529035 4.18355683,3.5681938 L4.26201715,3.47620341 L7.37256193,0.268347633 C7.69068907,-0.0596328074 8.18991011,-0.0869645108 8.53821957,0.186352523 Z"
                                                            id="path-1"
                                                        ></path>
                                                    </defs>
                                                    <g
                                                        id="icons/screenshare/off"
                                                        stroke="none"
                                                        stroke-width="1"
                                                        fill="none"
                                                        fill-rule="evenodd"
                                                    >
                                                        <g
                                                            id="color/9-#FFFFFF"
                                                            transform="translate(4.000000, 0.000000)"
                                                        >
                                                            <mask id="mask-2" fill="white">
                                                                <use xlink:href="#path-1"></use>
                                                            </mask>
                                                            <use
                                                                id="Mask"
                                                                fill="#FFFFFF"
                                                                fill-rule="nonzero"
                                                                xlink:href="#path-1"
                                                            ></use>
                                                            <g id="Group" mask="url(#mask-2)">
                                                                <g
                                                                    transform="translate(-4.000000, 0.000000)"
                                                                    id="color/9-#FFFFFF"
                                                                >
                                                                    <rect
                                                                        id="Rectangle"
                                                                        fill="#FFFFFF"
                                                                        x="0"
                                                                        y="0"
                                                                        width="24"
                                                                        height="24"
                                                                    ></rect>
                                                                </g>
                                                            </g>
                                                        </g>
                                                    </g>
                                                </svg>
                                            </button>
                                            <button
                                                class="slds-col button--endCall slds-button-circle button_pink"
                                                type="button"
                                                onclick="manageCall();"
                                                title="{!$Label.EndCall}"
                                            >
                                                <span class="slds-assistive-text"
                                                    >{!$Label.EndCall}</span
                                                >
                                                <svg
                                                    xmlns="http://www.w3.org/2000/svg"
                                                    viewBox="0 0 24 24"
                                                >
                                                    <path
                                                        d="M22.673,17.009l-2.452-2.453a2.811,2.811,0,0,0-3.979,0l-.5.5A54.366,54.366,0,0,1,8.94,8.245l.5-.5a2.817,2.817,0,0,0,0-3.978L6.983,1.317A2.883,2.883,0,0,0,3,1.317L1.66,2.663a3.981,3.981,0,0,0-.5,4.994A54.174,54.174,0,0,0,16.333,22.833a4.015,4.015,0,0,0,5-.5l1.345-1.346a2.809,2.809,0,0,0,0-3.977Z"
                                                    />
                                                </svg>
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <div id="hidden-feeds" class="slds-hide hidden-feeds"></div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="call-end-screen slds-hide" id="call-end-screen-container">
                <div id="rejoin-call-container">
                    <div
                        class="slds-grid slds-grid_vertical-align-center slds-grid_align-center rejoin-container"
                    >
                        <div class="slds-col">
                            <div class="slds-grid">
                                <div class="slds-col slds-size_1-of-1">
                                    <div class="slds-text-align_center televisit-rejoin">
                                        <span
                                            class="slds-icon_container slds-icon-utility-groups slds-m-bottom--small"
                                        >
                                            <img
                                                src="{!$Resource.televisit_icons + '/EndCall.svg'}"
                                                class="end-call-logo"
                                            />
                                        </span>
                                        <div class="slds-grid">
                                            <div class="slds-col slds-medium-size_12-of-12">
                                                <div class="televisit-end">
                                                    {!$Label.PT_Televisit_Left}
                                                </div>
                                                <div class="rejoin-buttons">
                                                    <button
                                                        class="close-tv-button"
                                                        onclick="confirmCancelRejoin();"
                                                    >
                                                        {!$Label.PT_Televisit_Close}
                                                    </button>
                                                    <button
                                                        class="rejoin-button"
                                                        onclick="confirmReJoin();"
                                                    >
                                                        {!$Label.PT_Televisit_Rejoin}
                                                    </button>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="tv-end-screen slds-hide" id="tv-end-screen-container">
                <div id="tv-end-container">
                    <div
                        class="slds-grid slds-grid_vertical-align-center slds-grid_align-center rejoin-container"
                    >
                        <div class="slds-col">
                            <div class="slds-grid">
                                <div class="slds-col slds-size_1-of-1">
                                    <div class="slds-text-align_center televisit-rejoin">
                                        <span
                                            class="slds-icon_container slds-icon-utility-groups slds-m-bottom--small"
                                        >
                                            <img
                                                src="{!$Resource.televisit_icons + '/Hourglass.svg'}"
                                                class="end-call-logo"
                                            />
                                        </span>
                                        <div class="slds-grid">
                                            <div class="slds-col slds-medium-size_12-of-12">
                                                <div class="televisit-end">
                                                    {!$Label.PT_Session_Ended}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <div class="duplicate-meet-screen slds-hide" id="duplicate-meet-screen-container">
                <div id="duplicate-meet-container">
                    <div
                        class="slds-grid slds-grid_vertical-align-center slds-grid_align-center rejoin-container"
                    >
                        <div class="slds-col">
                            <div class="slds-grid">
                                <div class="slds-col slds-size_1-of-1">
                                    <div class="slds-text-align_center televisit-rejoin">
                                        <div class="slds-grid">
                                            <div class="slds-col slds-medium-size_12-of-12">
                                                <div class="televisit-end">{!$Label.CloseTab}</div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </apex:outputPanel>

        <apex:outputPanel rendered="{!isSessionJoinable == false}">
            <div class="non-attendee-screen" id="non-attendee-screen-container">
                <div id="non-attendee-container">
                    <div
                        class="slds-grid slds-grid_vertical-align-center slds-grid_align-center rejoin-container"
                    >
                        <div class="slds-col">
                            <div class="slds-grid">
                                <div class="slds-col slds-size_1-of-1">
                                    <div class="slds-text-align_center televisit-rejoin">
                                        <span
                                            class="slds-icon_container slds-icon-utility-groups slds-m-bottom--small"
                                        >
                                            <img
                                                src="{!$Resource.televisit_icons + '/Lock.svg'}"
                                                class="end-call-logo"
                                            />
                                        </span>
                                        <div class="slds-grid">
                                            <div class="slds-col slds-medium-size_12-of-12">
                                                <div class="televisit-end">
                                                    {!$Label.Non_Attendee_Message}
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </apex:outputPanel>
        <div class="participant-wrapper">
            <div id="in-call-device-people-container" class="people-container">
                <div class="participant-header">
                    <span class="slds-text-heading--medium slds-text">
                        {!$Label.Participants}
                    </span>
                    <button
                        class="slds-button slds-button_icon slds-button_icon-small closebtn"
                        onclick="closeparticipatList();"
                    >
                        <svg class="slds-button__icon" aria-hidden="true">
                            <use
                                xlink:href="{!URLFOR($Asset.SLDS, 'assets/icons/utility-sprite/svg/symbols.svg#close')}"
                            ></use>
                        </svg>
                    </button>
                </div>
                <apex:outputPanel id="attendee-list">
                    <ul class="attendee-list slds-text-body_small slds-scrollable--y">
                        <apex:repeat value="{!attendees}" var="attendee">
                            <li id="{!attendee.streamId}" class="participant-item">
                                {!attendee.name}
                            </li>
                        </apex:repeat>
                    </ul>
                </apex:outputPanel>
            </div>
        </div>
    </body>
</apex:page>
