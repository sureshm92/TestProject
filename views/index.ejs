<html lang="en">
    <head>
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="stylesheet" href="/css/bootstrap.min.css" />
        <link rel="stylesheet" type="text/css" href="/css/style.css" />
    </head>
    <body>
        <script>
            var metadatRecMap = {};
            function handleMetadataChange() {
                var xmlhttp = new XMLHttpRequest();
                var metadataName = document.getElementById('metadataType').value;
                var span = document.getElementsByClassName('anchor')[0];
                span.innerHTML = '';
                if (metadataName) {
                    var params = {};
                    params['metadataName'] = metadataName;
                    xmlhttp.open('POST', 'http://localhost:3000/getMetadata', true);
                    xmlhttp.onreadystatechange = function (event) {
                        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                            console.log('response');
                            var search = document.createElement('input');
                            search.type = 'text';
                            search.classList.add('search-box');
                            search.placeholder = 'Search...';
                            search.onkeyup = function (event) {
                                var options = document
                                    .getElementsByTagName('ul')[0]
                                    .getElementsByTagName('li');
                                for (var i = 0; i < options.length; i++) {
                                    if (
                                        options[i].textContent
                                            .toLowerCase()
                                            .indexOf(event.target.value.toLowerCase()) == -1
                                    ) {
                                        options[i].style = 'display:none';
                                    } else {
                                        options[i].style = 'display:block';
                                    }
                                }
                            };
                            span.appendChild(search);
                            var ul = document.createElement('ul');
                            span.appendChild(ul);
                            var options = JSON.parse(xmlhttp.responseText);
                            console.log(xmlhttp.responseText);
                            for (let i = 0; i < options.length; i++) {
                                var li = document.createElement('li');
                                var checkbox = document.createElement('input');
                                checkbox.type = 'checkbox';
                                if (metadataName in metadatRecMap) {
                                    if (metadatRecMap[metadataName].indexOf(options[i]) != -1) {
                                        checkbox.checked = true;
                                    } else {
                                        checkbox.checked = false;
                                    }
                                } else {
                                    checkbox.checked = false;
                                }
                                checkbox.onclick = function (event) {
                                    var metadataName = document.getElementById('metadataType')
                                        .value;
                                    if (event.target.checked) {
                                        if (metadataName in metadatRecMap) {
                                            if (
                                                metadatRecMap[metadataName].indexOf(options[i]) ==
                                                -1
                                            ) {
                                                metadatRecMap[metadataName].push(options[i]);
                                            }
                                        } else {
                                            let metadataRecArr = [];
                                            metadataRecArr.push(options[i]);
                                            metadatRecMap[metadataName] = metadataRecArr;
                                        }
                                    } else {
                                        if (metadataName in metadatRecMap) {
                                            let metadataRecArr = metadatRecMap[metadataName];
                                            let index = metadataRecArr.indexOf(options[i]);
                                            if (index > -1) {
                                                metadataRecArr.splice(index, 1);
                                            }
                                            if (metadataRecArr.length == 0) {
                                                delete metadatRecMap[metadataName];
                                            }
                                        }
                                    }
                                };
                                li.appendChild(checkbox);
                                li.classList.add('list-style-none');
                                ul.classList.add('list-style-pad');
                                li.appendChild(document.createTextNode(options[i]));
                                ul.appendChild(li);
                            }
                        }
                    };
                    xmlhttp.setRequestHeader('Content-type', 'application/json');
                    xmlhttp.send(JSON.stringify(params));
                } else {
                    document.getElementById('metadataListDiv').style = 'display:none';
                }
            }
            function createPackage() {
                if (Object.keys(metadatRecMap).length === 0) {
                    alert('Please select atleast one component to create delta package.');
                } else {
                    var xmlhttp = new XMLHttpRequest();
                    var params = {};
                    params['selectedMetadata'] = metadatRecMap;
                    xmlhttp.open('POST', 'http://localhost:3000/createDeltaPackage', true);
                    xmlhttp.onreadystatechange = function () {
                        if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {
                            if (!alert('Your package has been created successfuly.!')) {
                                window.location.reload();
                            }
                        }
                    };
                    xmlhttp.setRequestHeader('Content-type', 'application/json');
                    xmlhttp.send(JSON.stringify(params));
                }
            }
        </script>
        <div class="pricing-header px-3 py-3 pt-md-5 pb-md-4 mx-auto text-center">
            <h1 class="display-5">Create Package for the Components</h1>
        </div>
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-5">
                    <select
                        class="form-control"
                        id="metadataType"
                        onchange="handleMetadataChange()"
                    >
                        <option value="">Select</option>
                        <% var options = helper.metadataOptions; for ( var i = 0; i <
                        options.length; i++ ) { %>
                        <option value="<%=options[ i ] %>"><%=options[ i ] %></option>
                        <% } %></select
                    ><br />
                    <div class="dropdown-check-list" id="list1" tabindex="100">
                        <span class="anchor"> </span>
                    </div>
                    <br />
                    <button
                        type="button"
                        class="btn btn-primary submit-btn-center"
                        onclick="createPackage()"
                    >
                        Submit
                    </button>
                </div>
            </div>
        </div>
    </body>
</html>
